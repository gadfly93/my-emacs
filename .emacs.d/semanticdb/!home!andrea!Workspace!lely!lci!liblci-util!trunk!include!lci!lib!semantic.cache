;; Object lib/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "lib/"
  :tables (list 
   (semanticdb-table "util.h"
    :major-mode 'c-mode
    :tags 
        '( ("LCI_LIB_UTIL_H" variable (:constant-flag t) nil [209 223])
            ("LCI_API" variable (:constant-flag t) nil [496 503])
            ("LCI_IMPORT" variable (:constant-flag t) nil [620 630])
            ("LCI_EXPORT" variable (:constant-flag t) nil [741 751])
            ("LCI_EXTERN" variable (:constant-flag t) nil [775 785])
            ("LCI_UTIL_EXPORT" variable (:constant-flag t) nil [938 953])
            ("LCI_UTIL_EXTERN" variable (:constant-flag t) nil [973 988])
            ("LCI_WORDSIZE" variable (:constant-flag t) nil [1185 1197])
            ("__has_builtin" variable (:constant-flag t) nil [1269 1282])
            ("__has_feature" variable (:constant-flag t) nil [1326 1339])
            ("__has_extension" variable (:constant-flag t) nil [1384 1399])
            ("FORMAT_PRINTF" variable (:constant-flag t) nil [1494 1507])
            ("FORMAT_PRINTF" variable (:constant-flag t) nil [1588 1601])
            ("QUOTE" variable (:constant-flag t) nil [1736 1741])
            ("STRINGIFY" variable (:constant-flag t) nil [1791 1800])
            ("unused" variable (:constant-flag t) nil [2049 2055])
            ("likely" variable (:constant-flag t) nil [2759 2765])
            ("unlikely" variable (:constant-flag t) nil [3105 3113])
            ("stddef.h" include (:system-flag t) nil [3136 3155])
            ("ssize_t" type
               (:typedef ("ptrdiff_t" type (:type "class") nil nil)
                :superclasses "ptrdiff_t"
                :type "typedef")
                nil [3245 3271])
            ("ALIGN" variable (:constant-flag t) nil [4201 4206])
            ("MIN" variable (:constant-flag t) nil [4297 4300])
            ("MAX" variable (:constant-flag t) nil [4382 4385])
            ("errnum_t" type
               (:typedef ("int")
                :superclasses "int"
                :type "typedef")
                nil [4488 4509])
            ("func_t" variable
               (:functionpointer-flag t
                :type "int")
                nil [4603 4627])
            ("dtor_t" variable
               (:functionpointer-flag t
                :type "void")
                nil [4692 4723])
            ("default_dtor" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("ptr" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [4962 4972]))                  
                :type "void")
                nil [4920 4973]))          
    :file "util.h"
    :pointmax 5012
    :fsize 5011
    :lastmodtime '(21354 18713 105885 876000)
    :unmatched-syntax '((close-paren 4994 . 4995) (TYPEDEF 4684 . 4691) (TYPEDEF 4595 . 4602) (open-paren 4548 . 4549) (close-paren 1175 . 1176) (semantic-list 1162 . 1175) (symbol 1155 . 1162) (punctuation 1153 . 1154) (punctuation 1152 . 1153) (semantic-list 1138 . 1147) (symbol 1131 . 1138) (punctuation 1129 . 1130) (punctuation 1128 . 1129) (semantic-list 1117 . 1127) (symbol 1110 . 1117) (punctuation 1108 . 1109) (punctuation 1107 . 1108) (semantic-list 1094 . 1102) (symbol 1087 . 1094) (punctuation 1085 . 1086) (punctuation 1084 . 1085) (semantic-list 1073 . 1083) (symbol 1066 . 1073) (punctuation 1064 . 1065) (punctuation 1063 . 1064))
    :lexical-table 
        '(("LCI_LIB_UTIL_H")
          ("unused" (spp-arg-list ("x") 2055 . 2058) . ((semantic-list "((void)(0 ? ((void)(x), 0) : 0))" 2059 . 2091)))
          ("LCI_WORDSIZE" . ((number "64" 1198 . 1200)))
          ("MAX" (spp-arg-list ("a" "b") 4385 . 4391) . ((semantic-list "((a) > (b) ? (a) : (b))" 4392 . 4415)))
          ("LCI_UTIL_EXTERN" . ((symbol "LCI_IMPORT" 989 . 999)))
          ("__has_builtin" (spp-arg-list ("x") 1282 . 1285) . ((number "0" 1286 . 1287)))
          ("__has_extension" . ((symbol "__has_feature" 1400 . 1413)))
          ("MIN" (spp-arg-list ("a" "b") 4300 . 4306) . ((semantic-list "((a) < (b) ? (a) : (b))" 4307 . 4330)))
          ("LCI_UTIL_EXPORT" . ((symbol "LCI_IMPORT" 954 . 964)))
          ("__has_feature" (spp-arg-list ("x") 1339 . 1342) . ((number "0" 1343 . 1344)))
          ("FORMAT_PRINTF" (spp-arg-list ("i" "j") 1601 . 1607) . ((symbol "__attribute__" 1608 . 1621) (semantic-list "((format(printf, i, j)))" 1621 . 1645)))
          ("likely" (spp-arg-list ("x") 2765 . 2768) . ((semantic-list "(x)" 2769 . 2772)))
          ("LCI_API")
          ("LCI_EXTERN" . ((EXTERN "extern" 786 . 792) (symbol "LCI_EXPORT" 793 . 803)))
          ("QUOTE" (spp-arg-list ("x") 1741 . 1744) . ((punctuation "#" 1745 . 1746) (symbol "x" 1746 . 1747)))
          ("LCI_EXPORT")
          ("STRINGIFY" (spp-arg-list ("x") 1800 . 1803) . ((symbol "QUOTE" 1804 . 1809) (semantic-list "(x)" 1809 . 1812)))
          ("ALIGN" (spp-arg-list ("x" "a") 4206 . 4212) . ((semantic-list "(((x) + ((a) - 1)) & ~((a) - 1))" 4213 . 4245)))
          ("unlikely" (spp-arg-list ("x") 3113 . 3116) . ((semantic-list "(x)" 3117 . 3120)))
          ("LCI_IMPORT" . ((EXTERN "extern" 631 . 637)))
          )

    )
   )
  :file "!home!andrea!Workspace!lely!lci!liblci-util!trunk!include!lci!lib!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2"
  )
