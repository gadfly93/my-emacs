;; Object generic/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "generic/"
  :tables (list 
   (semanticdb-table "_G_config.h"
    :major-mode 'c-mode
    :tags 
        '( ("_G_config_h" variable (:constant-flag t) nil [161 172])
            ("bits/types.h" include (:system-flag t) nil [253 276])
            ("__need_size_t" variable (:constant-flag t) nil [285 298])
            ("__need_wchar_t" variable (:constant-flag t) nil [358 372])
            ("__need_NULL" variable (:constant-flag t) nil [388 399])
            ("stddef.h" include (:system-flag t) nil [400 419])
            ("__need_mbstate_t" variable (:constant-flag t) nil [428 444])
            ("__need_wint_t" variable (:constant-flag t) nil [504 517])
            ("wchar.h" include (:system-flag t) nil [525 543])
            ("_G_size_t" variable (:constant-flag t) nil [552 561])
            ("_G_fpos_t" type
               (:typedef ("" type
                     (:members 
                        ( ("__pos" variable (:type ("__off_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [588 602])
                          ("__state" variable (:type ("__mbstate_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [605 625]))                        
                      :type "struct")
                      nil nil)
                :type "typedef")
                nil [569 638])
            ("_G_fpos64_t" type
               (:typedef ("" type
                     (:members 
                        ( ("__pos" variable (:type ("__off64_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [658 674])
                          ("__state" variable (:type ("__mbstate_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [677 697]))                        
                      :type "struct")
                      nil nil)
                :type "typedef")
                nil [639 712])
            ("_G_ssize_t" variable (:constant-flag t) nil [721 731])
            ("_G_off_t" variable (:constant-flag t) nil [750 758])
            ("_G_off64_t" variable (:constant-flag t) nil [775 785])
            ("_G_pid_t" variable (:constant-flag t) nil [802 810])
            ("_G_uid_t" variable (:constant-flag t) nil [827 835])
            ("_G_wchar_t" variable (:constant-flag t) nil [852 862])
            ("_G_wint_t" variable (:constant-flag t) nil [879 888])
            ("_G_stat64" variable (:constant-flag t) nil [904 913])
            ("gconv.h" include (:system-flag t) nil [969 988])
            ("_G_iconv_t" type
               (:typedef ("" type
                     (:members 
                        ( ("__cd" variable (:type ("__gconv_info" type
                               (:prototype t
                                :type "struct")
                                nil nil)) (reparse-symbol classsubparts) [1007 1032])
                          ("__combined" variable (:type ("" type
                               (:members 
                                  ( ("__cd" variable (:type ("__gconv_info" type
                                         (:prototype t
                                          :type "struct")
                                          nil nil)) (reparse-symbol classsubparts) [1050 1075])
                                    ("__data" variable (:type ("__gconv_step_data" type
                                         (:prototype t
                                          :type "struct")
                                          nil nil)) (reparse-symbol classsubparts) [1080 1112]))                                  
                                :type "struct")
                                nil nil)) (reparse-symbol classsubparts) [1035 1128]))                        
                      :type "union")
                      nil nil)
                :type "typedef")
                nil [989 1142])
            ("_G_int16_t" type
               (:typedef ("int")
                :superclasses "int"
                :type "typedef")
                nil [1151 1210])
            ("_G_int32_t" type
               (:typedef ("int")
                :superclasses "int"
                :type "typedef")
                nil [1211 1270])
            ("_G_uint16_t" type
               (:typedef ("unsigned int")
                :superclasses "unsigned int"
                :type "typedef")
                nil [1271 1340])
            ("_G_uint32_t" type
               (:typedef ("unsigned int")
                :superclasses "unsigned int"
                :type "typedef")
                nil [1341 1410])
            ("_G_HAVE_BOOL" variable (:constant-flag t) nil [1420 1432])
            ("_G_HAVE_ATEXIT" variable (:constant-flag t) nil [1518 1532])
            ("_G_HAVE_SYS_CDEFS" variable (:constant-flag t) nil [1543 1560])
            ("_G_HAVE_SYS_WAIT" variable (:constant-flag t) nil [1571 1587])
            ("_G_NEED_STDARG_H" variable (:constant-flag t) nil [1598 1614])
            ("_G_va_list" variable (:constant-flag t) nil [1625 1635])
            ("_G_HAVE_PRINTF_FP" variable (:constant-flag t) nil [1660 1677])
            ("_G_HAVE_MMAP" variable (:constant-flag t) nil [1688 1700])
            ("_G_HAVE_LONG_DOUBLE_IO" variable (:constant-flag t) nil [1711 1733])
            ("_G_HAVE_IO_FILE_OPEN" variable (:constant-flag t) nil [1744 1764])
            ("_G_HAVE_IO_GETLINE_INFO" variable (:constant-flag t) nil [1775 1798])
            ("_G_IO_IO_FILE_VERSION" variable (:constant-flag t) nil [1810 1831])
            ("_G_HAVE_ST_BLKSIZE" variable (:constant-flag t) nil [1913 1931])
            ("_G_BUFSIZ" variable (:constant-flag t) nil [1971 1980])
            ("_G_NAMES_HAVE_UNDERSCORE" variable (:constant-flag t) nil [2038 2062])
            ("_G_VTABLE_LABEL_PREFIX" variable (:constant-flag t) nil [2073 2095])
            ("_G_VTABLE_LABEL_HAS_LENGTH" variable (:constant-flag t) nil [2111 2137])
            ("_G_ARGS" variable (:constant-flag t) nil [2195 2202]))          
    :file "_G_config.h"
    :pointmax 2288
    :fsize 2287
    :lastmodtime '(20257 41979)
    :unmatched-syntax 'nil
    :lexical-table 
        '(("__need_size_t")
          ("_G_HAVE_ATEXIT" . ((number "1" 1533 . 1534)))
          ("_G_HAVE_SYS_WAIT" . ((number "1" 1588 . 1589)))
          ("__need_NULL")
          ("__need_wchar_t")
          ("_G_uid_t" . ((symbol "__uid_t" 836 . 843)))
          ("_G_HAVE_PRINTF_FP" . ((number "1" 1678 . 1679)))
          ("_G_HAVE_LONG_DOUBLE_IO" . ((number "1" 1734 . 1735)))
          ("_G_NEED_STDARG_H" . ((number "1" 1615 . 1616)))
          ("_G_HAVE_IO_FILE_OPEN" . ((number "1" 1765 . 1766)))
          ("_G_HAVE_ST_BLKSIZE" . ((symbol "defined" 1932 . 1939) (semantic-list "(_STATBUF_ST_BLKSIZE)" 1940 . 1961)))
          ("_G_VTABLE_LABEL_PREFIX" . ((string "\"_vt.\"" 2096 . 2102)))
          ("_G_config_h" . ((number "1" 173 . 174)))
          ("_G_off_t" . ((symbol "__off_t" 759 . 766)))
          ("_G_wint_t" . ((symbol "wint_t" 889 . 895)))
          ("_G_HAVE_BOOL" . ((number "1" 1433 . 1434)))
          ("_G_NAMES_HAVE_UNDERSCORE" . ((number "0" 2063 . 2064)))
          ("_G_ssize_t" . ((symbol "__ssize_t" 732 . 741)))
          ("_G_off64_t" . ((symbol "__off_t" 786 . 793)))
          ("_G_va_list" . ((symbol "__gnuc_va_list" 1636 . 1650)))
          ("_G_HAVE_MMAP" . ((number "1" 1701 . 1702)))
          ("_G_ARGS" (spp-arg-list ("ARGLIST") 2202 . 2211) . ((symbol "ARGLIST" 2212 . 2219)))
          ("_G_wchar_t" . ((WCHAR "wchar_t" 863 . 870)))
          ("_G_IO_IO_FILE_VERSION" . ((number "0x20001" 1832 . 1839)))
          ("__need_wint_t")
          ("_G_size_t" . ((symbol "size_t" 562 . 568)))
          ("_G_stat64" . ((symbol "stat" 914 . 918)))
          ("_G_pid_t" . ((symbol "__pid_t" 811 . 818)))
          ("__need_mbstate_t")
          ("_G_HAVE_IO_GETLINE_INFO" . ((number "1" 1799 . 1800)))
          ("_G_HAVE_SYS_CDEFS" . ((number "1" 1561 . 1562)))
          ("_G_BUFSIZ" . ((number "8192" 1981 . 1985)))
          ("_G_VTABLE_LABEL_HAS_LENGTH" . ((number "1" 2138 . 2139)))
          )

    )
   )
  :file "!home!andrea!Workspace!glibc!sysdeps!generic!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.0"
  )
