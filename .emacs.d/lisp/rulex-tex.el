(defun replace-regexp-in-limits (strlim1 strlim2 regfind regreplace)
  (beginning-of-buffer)
  (search-forward-regexp strlim1)
  (move-beginning-of-line 1)
  (setq p1 (point))
  (set-mark (line-beginning-position))
  (end-of-line)
  (search-forward-regexp strlim2)
  (setq p2 (point))
  (move-beginning-of-line 1)
  (if (and transient-mark-mode mark-active)
      (kill-region p1 p2))
  (get-buffer-create "tmp")
  (switch-to-buffer "tmp")
  (yank)
  (move-beginning-of-line 1)
  (replace-regexp regfind regreplace)
  (beginning-of-buffer)
  (setq p1 (point))
  (end-of-buffer)
  (setq p2 (point))
  (kill-region p1 p2)
  (kill-buffer)
  (yank)
)

(defun insert-str-after-regexp-in-limits (strlim1 strlim2 regfind str-add)
  (beginning-of-buffer)
  (search-forward-regexp strlim1)
  (move-beginning-of-line 1)
  (setq p1 (point))
  (set-mark (line-beginning-position))
  (end-of-line)
  (search-forward-regexp strlim2)
  (setq p2 (point))
  (move-beginning-of-line 1)
  (if (and transient-mark-mode mark-active)
      (kill-region p1 p2))
  (get-buffer-create "tmp")
  (switch-to-buffer "tmp")
  (yank)
  (beginning-of-buffer)
  (while (search-forward-regexp regfind nil t)
    (progn
      (move-end-of-line nil)
      (insert str-add)
      )
    )
  (beginning-of-buffer)
  (setq p1 (point))
  (end-of-buffer)
  (setq p2 (point))
  (kill-region p1 p2)
  (kill-buffer)
  (yank)
)

(defun insert-str-before-regexp-in-limits (strlim1 strlim2 regfind str-add)
  (beginning-of-buffer)
  (search-forward-regexp strlim1)
  (move-beginning-of-line 1)
  (setq p1 (point))
  (set-mark (line-beginning-position))
  (end-of-line)
  (search-forward-regexp strlim2)
  (setq p2 (point))
  (move-beginning-of-line 1)
  (if (and transient-mark-mode mark-active)
      (kill-region p1 p2))
  (get-buffer-create "tmp")
  (switch-to-buffer "tmp")
  (yank)
  (beginning-of-buffer)
  (while (search-forward-regexp regfind nil t)
    (progn
      (move-beginning-of-line nil)
      (insert str-add)
      (move-end-of-line nil)
      )
    )
  (beginning-of-buffer)
  (setq p1 (point))
  (end-of-buffer)
  (setq p2 (point))
  (kill-region p1 p2)
  (kill-buffer)
  (yank)
)


(defun rulex-latex ()
  (interactive)
  (find-file "new_manual/_build/latex/Rulex.tex")
  (beginning-of-buffer)
  (replace-regexp "[\\]hfill}\n" "}")

  (beginning-of-buffer)
  (replace-regexp "[\\]begin{DUlineblock}{0em}\n[\\]item\\[\\]\n[\\]end{DUlineblock}" "")

  (replace-regexp-in-limits
   "[\\]section{Stage Interaction}" "[\\]section"
   "[\\]includegraphics{*}" "[\\]includegraphics[width=.3[\\]textwidth]{*}")

  (insert-str-after-regexp-in-limits
   "[\\]section{Task index}" "[\\]subsection"
   "[\\]textbf" "\n")

  (insert-str-before-regexp-in-limits
   "[\\]subsection{Data Manager}" "[\\]chapter{A Rulex session}"
   "[\\]textbf" "\n")

;  (highlight-regexp "[\\\][h]fill")
  (save-buffer)
)
